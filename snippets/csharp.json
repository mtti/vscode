{
	"Optimized for loop": {
		"prefix": "for",
		"body": [
			"for (int i = 0, count = ${1:count}; i < count; i++) {",
			"    $0",
			"}"
		]
	},

	"Iterate through listeners": {
		"prefix": "forlist",
		"body": [
			"for (int i = 0, count = this.listeners.Count; i < count; i++) {",
			"    this.listeners[i].${2:methodName}($3);",
			"}"
		],
		"description": "Call a method on all listeners"
	},

	"New MonoBehaviour": {
		"prefix": "monobehaviour",
		"body": [
			"using System;",
			"using UnityEngine;",
			"",
			"namespace ${1:namespace} {",
			"    public class ${TM_FILENAME:ClassName}$2 : MonoBehaviour {",
			"        $0",
			"    }",
			"}",
			""
		],
		"description": "Define a new MonoBehaviour"
	},

	"Inject property": {
		"prefix": "inprop",
		"body": [
			"[Inject] I${1:ServiceName} ${2:propertyName};"
		],
		"description": "Inject property"
	},

	"Service": {
		"prefix": "service",
		"body": [
			"using System;",
			"using System.Collections.Generic;",
			"",
			"using mtti.Inject;",
			"",
			"namespace ${1:namespace} {",
			"    public interface I${2:ServiceName}Listener {",
			"    }",
			"",
			"    public interface I${2:ServiceName}Service {",
			"        void AddListener(I${2:ServiceName}Listener listener);",
			"        void RemoveListener(I${2:ServiceName}Listener listener);",
			"    }",
			"",
			"    [Service(typeof(I${2:ServiceName}Service))]",
			"    public class ${2:ServiceName}Service : I${2:ServiceName}Service {",
			"        private List<I${2:ServiceName}Listener> listeners",
			"            = new List<I${2:ServiceName}Listener>();",
			"",
			"        public void AddListener(I${2:ServiceName}Listener listener) {",
			"            if (!this.listeners.Contains(listener)) {",
			"                this.listeners.Add(listener);",
			"            }",
			"        }",
			"",
			"        public void RemoveListener(I${2:ServiceName}Listener listener) {",
			"            this.listeners.Remove(listener);",
			"        }",
			"    }",
			"}$0",
		],
		"description": "Define a new mtti.Inject service"
	},

	"ScriptableObject": {
		"prefix": "scriptableobject",
		"body": [
			"using System;",
			"using UnityEngine;",
			"",
			"namespace ${1:namespace} {",
			"    public class ${TM_FILENAME:ClassName}$2 : ScriptableObject {",
			"        $0",
			"    }",
			"}",
			""
		],
		"description": "Define a new ScriptableObject"
	}
}
